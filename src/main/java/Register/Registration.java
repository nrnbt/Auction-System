/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Register;

import App.Home;
import Login.Login;
import client.Register;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author asus
 */
public class Registration extends javax.swing.JFrame {

    public String ipAddress;
    public Registration(String ipAddress) {
        this.ipAddress = ipAddress;
        initComponents();
//        Toolkit tk = Toolkit.getDefaultToolkit();
//        int xsize = (int) tk.getScreenSize().getWidth();
//        int ysize = (int) tk.getScreenSize().getHeight();
//        Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());
//        int taskBarSize = scnMax.bottom;
//        this.setSize(xsize,ysize - taskBarSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JDesktopPane = new javax.swing.JDesktopPane();
        emsg1 = new javax.swing.JLabel();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        submitButton = new com.k33ptoo.components.KButton();
        backButton = new com.k33ptoo.components.KButton();
        date_chooser = new com.toedter.calendar.JDateChooser();
        terms = new javax.swing.JCheckBox();
        pword2 = new javax.swing.JPasswordField();
        pword = new javax.swing.JPasswordField();
        number = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        mail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        loadingIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        JDesktopPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emsg1.setForeground(new java.awt.Color(255, 255, 255));
        JDesktopPane.add(emsg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(729, 70, 180, 19));

        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        submitButton.setText("Submit");
        submitButton.setkBorderRadius(30);
        submitButton.setkEndColor(new java.awt.Color(0, 204, 204));
        submitButton.setkFillButton(false);
        submitButton.setkHoverEndColor(new java.awt.Color(204, 0, 204));
        submitButton.setkHoverForeGround(new java.awt.Color(255, 204, 255));
        submitButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        submitButton.setkStartColor(new java.awt.Color(255, 255, 255));
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 150, 40));

        backButton.setText("Back");
        backButton.setkBorderRadius(30);
        backButton.setkEndColor(new java.awt.Color(0, 204, 204));
        backButton.setkFillButton(false);
        backButton.setkHoverEndColor(new java.awt.Color(204, 0, 204));
        backButton.setkHoverForeGround(new java.awt.Color(255, 204, 255));
        backButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        backButton.setkStartColor(new java.awt.Color(255, 255, 255));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        kGradientPanel1.add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 470, 160, 40));

        date_chooser.setBackground(new java.awt.Color(255, 204, 204));
        date_chooser.setToolTipText("");
        date_chooser.setOpaque(false);
        date_chooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                date_chooserFocusLost(evt);
            }
        });
        kGradientPanel1.add(date_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, 360, 31));

        terms.setBackground(new Color(0,0,0,0));
        terms.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        terms.setForeground(new java.awt.Color(255, 255, 255));
        terms.setText("Accept terms and conditions");
        terms.setBorder(null);
        kGradientPanel1.add(terms, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, 250, 18));

        pword2.setForeground(new java.awt.Color(255, 255, 255));
        pword2.setText("Repeat password");
        pword2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        pword2.setCaretColor(new java.awt.Color(255, 255, 255));
        pword2.setEchoChar('\u0000');
        pword2.setOpaque(false
        );
        pword2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pword2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pword2FocusLost(evt);
            }
        });
        kGradientPanel1.add(pword2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 380, 362, 30));

        pword.setForeground(new java.awt.Color(255, 255, 255));
        pword.setText("Password");
        pword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        pword.setCaretColor(new java.awt.Color(255, 255, 255));
        pword.setEchoChar('\u0000');
        pword.setOpaque(false);
        pword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pwordFocusLost(evt);
            }
        });
        pword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwordActionPerformed(evt);
            }
        });
        kGradientPanel1.add(pword, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, 362, 31));

        number.setForeground(new java.awt.Color(255, 255, 255));
        number.setText("Phone number");
        number.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        number.setCaretColor(new java.awt.Color(255, 255, 255));
        number.setOpaque(false);
        number.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numberFocusLost(evt);
            }
        });
        number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberActionPerformed(evt);
            }
        });
        number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberKeyTyped(evt);
            }
        });
        kGradientPanel1.add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 362, 31));

        fname.setBackground(new Color(0,0,0,0));
        fname.setForeground(new java.awt.Color(255, 255, 255));
        fname.setText("First name");
        fname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        fname.setCaretColor(new java.awt.Color(255, 255, 255));
        fname.setOpaque(false);
        fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fnameFocusLost(evt);
            }
        });
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fnameKeyReleased(evt);
            }
        });
        kGradientPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 362, 31));

        lname.setForeground(new java.awt.Color(255, 255, 255));
        lname.setText("Last name");
        lname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        lname.setCaretColor(new java.awt.Color(255, 255, 255));
        lname.setOpaque(false);
        lname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lnameFocusLost(evt);
            }
        });
        lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lnameKeyReleased(evt);
            }
        });
        kGradientPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 362, 31));

        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setText("Username");
        user.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        user.setCaretColor(new java.awt.Color(255, 255, 255));
        user.setOpaque(false);
        user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userFocusLost(evt);
            }
        });
        kGradientPanel1.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 362, 31));

        mail.setForeground(new java.awt.Color(255, 255, 255));
        mail.setText("e-mail");
        mail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        mail.setCaretColor(new java.awt.Color(255, 255, 255));
        mail.setOpaque(false);
        mail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                mailFocusLost(evt);
            }
        });
        mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailActionPerformed(evt);
            }
        });
        mail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mailKeyReleased(evt);
            }
        });
        kGradientPanel1.add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 362, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Sign Up");
        kGradientPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 170, 60));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Birthday");
        kGradientPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 90, 30));
        kGradientPanel1.add(loadingIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 50, 40));

        JDesktopPane.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JDesktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JDesktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        JDesktopPane.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameKeyReleased
//        String PATTERN = "^[a-zA-Z]{0,30}$";
//        Pattern patt = Pattern.compile(PATTERN);
//        Matcher match=patt.matcher(fname.getText());
//        if(!match.matches()){
//            emsg1.setText("Invalid Username!");
//        }
//        else{
//            emsg1.setText(null);
//        }
    }//GEN-LAST:event_fnameKeyReleased

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameActionPerformed

    private void fnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameFocusLost
        // TODO add your handling code here:
        if (fname.getText().equals("")){
            fname.setText("First name");
            
        }
    }//GEN-LAST:event_fnameFocusLost

    private void fnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameFocusGained
        // TODO add your handling code here:
        if (fname.getText().equals("First name")){
            fname.setText("");
            
        }
    }//GEN-LAST:event_fnameFocusGained

    private void pword2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pword2FocusLost
        // TODO add your handling code here:
        if (pword2.getText().equals("")){
            //pword2.setText("Repeat password");
            

        }
    }//GEN-LAST:event_pword2FocusLost

    private void pword2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pword2FocusGained
        // TODO add your handling code here:
        if (pword2.getText().equals("Repeat password")){
            pword2.setText("");
            
            pword2.setEchoChar('*');

        }
    }//GEN-LAST:event_pword2FocusGained

    private void lnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnameKeyReleased
        // TODO add your handling code here:
//        String PATTERN = "^[a-zA-Z]{0,30}$";
//        Pattern patt = Pattern.compile(PATTERN);
//        Matcher match=patt.matcher(lname.getText());
//        if(!match.matches()){
//            emsg2.setText("Invalid Lastname!");
//        }
//        else{
//            emsg2.setText(null);
//        }
    }//GEN-LAST:event_lnameKeyReleased

    private void lnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lnameFocusLost
        // TODO add your handling code here:
        if (lname.getText().equals("")){
            lname.setText("Last name");
            
        }
    }//GEN-LAST:event_lnameFocusLost

    private void lnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lnameFocusGained
        // TODO add your handling code here:
        if (lname.getText().equals("Last name")){
            lname.setText("");
            
        }
    }//GEN-LAST:event_lnameFocusGained

    private void userFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusLost
        // TODO add your handling code here:
        if (user.getText().equals("")){
            user.setText("Username");
            
        }
    }//GEN-LAST:event_userFocusLost

    private void userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusGained
        // TODO add your handling code here:
        if (user.getText().equals("Username")){
            user.setText("");
           
        }
    }//GEN-LAST:event_userFocusGained

    private void pwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwordActionPerformed

    private void pwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwordFocusLost
        // TODO add your handling code here:
        if (pword.getText().equals("")){
            //pword.setText("Password");
            

        }
    }//GEN-LAST:event_pwordFocusLost

    private void pwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwordFocusGained
        // TODO add your handling code here:
        if (pword.getText().equals("Password")){
            pword.setText("");
           
            pword.setEchoChar('*');
        }
    }//GEN-LAST:event_pwordFocusGained

    private void date_chooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_date_chooserFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_date_chooserFocusLost

    private void mailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mailKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match=patt.matcher(mail.getText());
    }//GEN-LAST:event_mailKeyReleased

    private void mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mailActionPerformed

    private void mailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mailFocusLost
        // TODO add your handling code here:
        if (mail.getText().equals("")){
            mail.setText("e-mail");
            
        }
    }//GEN-LAST:event_mailFocusLost

    private void mailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mailFocusGained
        // TODO add your handling code here:
        if (mail.getText().equals("e-mail")){
            mail.setText("");
            
        }
    }//GEN-LAST:event_mailFocusGained

    private void numberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_numberKeyTyped

    private void numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberActionPerformed

    private void numberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numberFocusLost
        // TODO add your handling code here:
        if (number.getText().equals("")){
            number.setText("Phone number");
            
        }
    }//GEN-LAST:event_numberFocusLost

    private void numberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numberFocusGained
        // TODO add your handling code here:
        if (number.getText().equals("Phone number")){
            number.setText("");
            
        }
    }//GEN-LAST:event_numberFocusGained

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        String email = mail.getText().toString();
        String stname = fname.getText().toString();
        String lastname = lname.getText().toString();
        String pnumber = number.getText().toString();
        String uname = user.getText().toString();
        String password = pword.getText().toString();
        String password2 = pword2.getText().toString();
        String regex = "^(.+)@(.+)$";  
        Pattern pattern = Pattern.compile(regex);  
        Matcher matcher = pattern.matcher(email);
        int num = 0;
        try {
            num = Integer.parseInt(pnumber);
        } catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Plsese enter valid phone number.", "Invalid input", JOptionPane.ERROR_MESSAGE);
        }
        
        if (email.equals("") ||email.equals("e-mail")) {
            JOptionPane.showMessageDialog(this, "Please enter your E-Mail.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (stname.equals("") || stname.equals("First name")) {
            JOptionPane.showMessageDialog(this, "Please enter your First Name.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (lastname.equals("") || lastname.equals("Last name")) {
            JOptionPane.showMessageDialog(this, "Please enter your Last Name.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (pnumber.equals("") || pnumber.equals("Phone number")) {
            JOptionPane.showMessageDialog(this, "Please enter your Phone Number.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (uname.equals("") || uname.equals("Username")) {
            JOptionPane.showMessageDialog(this, "Please enter your User Name.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (password.equals("") || password.equals("password")) {
            JOptionPane.showMessageDialog(this, "Please enter your Password.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if(date_chooser.getDate() == null){
            JOptionPane.showMessageDialog(this, "Please enter your Birthday.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (password2.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter your Confirm Password.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        }else if (password2.equals("Repeat password")) {
            JOptionPane.showMessageDialog(this, "Please repeat your Password.", "Empty input error", JOptionPane.ERROR_MESSAGE);
        } else if (!password.equals(password2)) {
            JOptionPane.showMessageDialog(this, "Password Doesn't Match.", "Input error", JOptionPane.ERROR_MESSAGE);
        } else if (!terms.isSelected()){
            JOptionPane.showMessageDialog(this, "Please accept terms and conditions to submit.", "CheckBox error", JOptionPane.ERROR_MESSAGE);
        } else if(!matcher.matches()){
            JOptionPane.showMessageDialog(this, "Plsese enter valid email.", "Invalid input", JOptionPane.ERROR_MESSAGE);
        } else if (pnumber.length() != 8){
            JOptionPane.showMessageDialog(this, "Plsese enter valid phone number.", "Invalid input", JOptionPane.ERROR_MESSAGE);
        } else if(num == 0){
            JOptionPane.showMessageDialog(this, "Plsese enter valid phone number.", "Invalid input", JOptionPane.ERROR_MESSAGE);
        }else {
            Date date = date_chooser.getDate();
            SimpleDateFormat DateFor = new SimpleDateFormat("yyyy/MM/dd");
            SimpleDateFormat DateFor1 = new SimpleDateFormat("yyyy-MM-dd");
            String stringDate = DateFor.format(date);
            String stringDate1 = DateFor1.format(date);
            LocalDate dob = LocalDate.parse(stringDate1);
            LocalDate curDate = LocalDate.now();  
            if(Period.between(dob, curDate).getYears() < 18){
                JOptionPane.showMessageDialog(this, "You must be 18 or higher.", "Invalid age", JOptionPane.ERROR_MESSAGE);
            } else {
                loadingIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loading-icon.gif")));
                try (Socket socket = new Socket(ipAddress, 1234)) {

                    ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
                    BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

                    String userName = null;
                    userName = uname;
                    Register regUser = new Register(userName);
                    regUser.passWord = password;
                    regUser.firstName = stname;
                    regUser.lastName = lastname;
                    regUser.email = email;
                    regUser.phone = pnumber;
                    regUser.birthDay = stringDate;

                    oos.writeObject(regUser);
                    oos.flush();

                    String res = in.readLine();
                    if(res.contains("User registered")){
                        this.hide();
                        new Login(ipAddress).setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, res, "Register Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "Connection error", "Error", JOptionPane.ERROR_MESSAGE);
                }
                loadingIcon.setIcon(null);   
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.hide();
        new Home(ipAddress).setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane JDesktopPane;
    private com.k33ptoo.components.KButton backButton;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JLabel emsg1;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField lname;
    private javax.swing.JLabel loadingIcon;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField number;
    private javax.swing.JPasswordField pword;
    private javax.swing.JPasswordField pword2;
    private com.k33ptoo.components.KButton submitButton;
    private javax.swing.JCheckBox terms;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
