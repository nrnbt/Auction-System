/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author nrnbt
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }
    
    public static FetchAuctionResponse AuctionList;

    
    
    public void show_data() throws ClassNotFoundException {
        ArrayList<FetchAuctionResponse> auctionList = new ArrayList<>();
        try (Socket socket = new Socket("192.168.25.121", 1234)) {

            ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());
            
            FetchAuctionRequest request = new FetchAuctionRequest("auctions");
            oos.writeObject(request);
   
            Object obj = ois.readObject();
            FetchAuctionResponse adminList;
            
            if (obj.getClass().getName().equals("admin.FetchAuctionResponse")
		&& (adminList = (FetchAuctionResponse) obj) != null) {
                
                if(adminList.auctionList.isEmpty()){
                    JOptionPane.showMessageDialog(Background, "Nothing to show");
                } else {
                    AuctionList = adminList;
                    DefaultTableModel model = (DefaultTableModel) auctionsTable.getModel();
                    Object[] row = new Object[5];
                    for (int i = 0; i < adminList.auctionList.size(); i++) {
                        row[0] = i + 1;
                        row[1] = adminList.auctionList.get(i).title;
                        row[2] = adminList.auctionList.get(i).user;
                        row[3] = adminList.auctionList.get(i).startPrice;
                        row[4] = adminList.auctionList.get(i).status;
                        model.addRow(row);
                    }
                }
            }
            
            oos.close();
            ois.close();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new keeptoo.KGradientPanel();
        tableScroll = new javax.swing.JScrollPane();
        auctionsTable = new javax.swing.JTable();
        showButton = new javax.swing.JButton();
        CloseButton = new javax.swing.JLabel();
        singleAuction = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        auctionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Title", "User", "Start Price", "Status"
            }
        ));
        tableScroll.setViewportView(auctionsTable);

        Background.add(tableScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1040, 400));

        showButton.setText("Show");
        showButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showButtonActionPerformed(evt);
            }
        });
        Background.add(showButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 98, -1));

        CloseButton.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        CloseButton.setForeground(new java.awt.Color(255, 255, 255));
        CloseButton.setText("X");
        CloseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseButtonMouseClicked(evt);
            }
        });
        Background.add(CloseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 10, 20, 20));

        singleAuction.setText("See Auction");
        singleAuction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleAuctionActionPerformed(evt);
            }
        });
        Background.add(singleAuction, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-9, 0, 1070, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showButtonActionPerformed
        try {
//                    DefaultTableModel dm = (DefaultTableModel) auctionsTable.getModel();
//        int rowCount = dm.getRowCount();
//        for (int i = rowCount - 1; i >= 0; i--) {
//            dm.removeRow(i);
//        }
        show_data();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showButtonActionPerformed

    private void CloseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseButtonMouseClicked
         System.exit(0);
    }//GEN-LAST:event_CloseButtonMouseClicked

    private void singleAuctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleAuctionActionPerformed
        if(auctionsTable.getSelectedRowCount() > 0){
            try (Socket socket = new Socket("192.168.25.121", 1234)) {

                ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());

                GetImageRequest imgRequest = new GetImageRequest(AuctionList.auctionList.get(auctionsTable.getSelectedRow()).img);
                oos.writeObject(imgRequest);
                
                InputStream inputStream = socket.getInputStream();

                BufferedInputStream bufferedInputStream = new BufferedInputStream(inputStream);
                
                BufferedImage buffImg = new ImageIO.read(bufferedInputStream);
                
                
                if (buffImg != null) {
                        Object[] options = {"OK"};
                        JOptionPane.showOptionDialog(
                        Background, 
                        AuctionList.auctionList.get(auctionsTable.getSelectedRow()).description, 
                        auctionsTable.getValueAt(auctionsTable.getSelectedRow(), 1).toString(), 
                        JOptionPane.PLAIN_MESSAGE, 
                        JOptionPane.QUESTION_MESSAGE,
                        new ImageIcon(buffImg),
                        options,
                        options[0]);
                }

                socket.close();
//                ois.close();

            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            if(auctionsTable.getRowCount() == 0){
                JOptionPane.showMessageDialog(Background, "Nothing to show");
            } else {
                JOptionPane.showMessageDialog(Background, "Select one or more rows");
            }
        }
    }//GEN-LAST:event_singleAuctionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel Background;
    private javax.swing.JLabel CloseButton;
    private javax.swing.JTable auctionsTable;
    private javax.swing.JButton showButton;
    private javax.swing.JButton singleAuction;
    private javax.swing.JScrollPane tableScroll;
    // End of variables declaration//GEN-END:variables
}
