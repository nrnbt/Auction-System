/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package App;

import client.GetAuctionRequest;
import client.GetAuctionResponse;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author nrnbt
 */
public class AuctionById extends java.awt.Frame {

    /**
     * Creates new form NewFrame
     */
    
    public int auctionId;
    
    public AuctionById(int id) {
      this.auctionId = id;
        initComponents();
         try {
            getAuction();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AuctionById.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException e){
            throw e;
        }

    }

    private AuctionById() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
        
    public int getId() {
        return auctionId;
    }

    public void setId(int auctionId) {
        this.auctionId = auctionId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuctionById().setVisible(true);
            }
        });
    }
    
    public void getAuction() throws ClassNotFoundException{
        try (Socket socket = new Socket("192.168.1.42", 1234)) {

            ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());
            
            GetAuctionRequest request = new GetAuctionRequest(auctionId);
            oos.writeObject(request);
            oos.flush();
            
            Object obj = ois.readObject();
            GetAuctionResponse auction;
            if (obj.getClass().getName().equals("client.GetAuctionResponse")
		&& (auction = (GetAuctionResponse) obj) != null) {
                if(auction == null){
                    JOptionPane.showMessageDialog(
                            null,
                            "Get auction failed",
                            "Auction not found",
                            JOptionPane.ERROR_MESSAGE
                    );
                } else {
                    System.out.println(auction.auctionData.status);
                }
                GetAuctionResponse AuctionList = auction;
            }
            
            oos.close();
            ois.close();
            socket.close();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (NullPointerException e) {
            throw e;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
